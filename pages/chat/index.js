import Head from "next/head";
import dynamic from "next/dynamic";
import { useEffect, useState } from "react";

import { useSelector } from "react-redux";
const Header = dynamic(() => import("../../components/Header/Header"));
const PersonChatllist = dynamic(() =>
  import("../../components/Chat/PersonChatllist")
);
const MenuModal = dynamic(() => import("../../components/Modal/MenuModal"));

import db from "../../config/firebase";
import { selectMenuModalIsOpen } from "../../features/modalSlice";
import useAuth from "../../hooks/useAuth";

function Index() {
  const menuModal = useSelector(selectMenuModalIsOpen);

  const { user } = useAuth();
  const [userData, setUserData] = useState([]);

  const [chatSnapshot, setChatSnapshot] = useState([]);

  useEffect(() => {
    if (user) {
      let unsubscribe;
      const fetchUSerData = () => {
        unsubscribe = db
          .collection("users")
          .doc(user?.uid)
          .get()
          .then((documentSnapshot) => {
            if (!documentSnapshot.exists) {
            } else {
              //console.log('User data: ', documentSnapshot.data());
              setUserData(documentSnapshot.data());
            }
          });
      };
      fetchUSerData();
      return unsubscribe;
    }
  }, [db, user]);

  useEffect(() => {
    let unsubscribe;
    const fetchChat = () => {
      unsubscribe = db
        .collection("chats")
        .where("users", "array-contains", user?.uid)
        .onSnapshot((snapshot) =>
          setChatSnapshot(
            snapshot?.docs.map((doc) => ({
              id: doc?.id,
              ...doc?.data(),
            }))
          )
        );
    };
    fetchChat();
    return unsubscribe;
  }, [db, user]);

  console.log(chatSnapshot);

  return (
    <div className="">
      <Head>
        <title>ZH Instagram || Chat</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header userData={userData} />
      <main className="max-w-screen mx-auto">
        <div className="flex p-10">
          <div className="flex flex-col flex-grow w-2/3">
            {chatSnapshot?.map((chat) => (
              <PersonChatllist
                key={chat?.id}
                id={chat?.id}
                users={chat?.users}
                displayName={chat?.displayName}
              />
            ))}
          </div>
        </div>
      </main>
      {menuModal && <MenuModal />}
    </div>
  );
}

export default Index;
export async function getServerSideProps({ req, res }) {
  res.setHeader(
    "Cache-Control",
    "public, s-maxage=10, stale-while-revalidate=59"
  );

  return {
    props: {},
  };
}
